
@using IranSoftjo.Package.DataModel
@model IEnumerable<IranSoftjo.Package.WebUi.ViewModels.OrderVM>
@{
    ViewBag.Title = "لیست سفارشات ";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<hgroup class="title">
    <h2>جهت مشاهده جزئیات خرید بر روی مثلت کنار شماره فاکتور کلیک کنید</h2>
    <br />
</hgroup>
<div class="k-rtl">
    @( Html.Kendo().Grid(Model)
           .Name("Grid")
           .Pageable().Filterable()
           .Columns(columns =>
                    {
                        columns.Bound(item => item.OrderID).Width(100);
                        columns.Bound(item => item.UserName).Width(100);
                        columns.Bound(item => item.OrderDateLocalize).Width(150);
                        columns.Bound(item => item.IsFinalizedType).Width(100);
                        columns.Bound(item => item.OrderTotalLocalize).Width(100);
                        columns.Bound(item => item.OrderID).Title("عملیات پرداخت").Filterable(false).Groupable(false)
                            .Template(@<text>
    @if (item.IsFinalized == IsFinalizedEnum.Unpaid)
    {
        <b>پرداخت نشده</b>
    }
    else if (item.IsFinalized == IsFinalizedEnum.Waiting)
    {
        <b>در انتظار تایید پرداخت</b>
    }
    else
    {
        <b>پرداخت شده</b>
    }
    </text>).Width(250);
                    })
           .DetailTemplate(
               @<text>
    @(Html.Kendo().Grid(item.OrderDetails)
                          .Name("Orders_" + item.OrderID)
                          .Columns(columns =>
                                   {
                                       columns.Bound(o => o.Product.ProductTitle).Title("نام محصول").Width(140);
                                       columns.Bound(o => o.PriceUnit).Format("{0:#,0 ریال}").Title("قیمت").Width(200);
                                   })
                          .DataSource(dataSource => dataSource.Server())
                          .Sortable()
                          .Filterable()
                          )
    </text>
           )
           .RowAction(row => { row.DetailRow.Expanded = false; })
          )

</div>
